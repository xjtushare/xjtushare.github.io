<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-24T08:13:26.375Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Pu Cao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hello</title>
    <link href="http://example.com/2021/03/24/hello/"/>
    <id>http://example.com/2021/03/24/hello/</id>
    <published>2021-03-24T04:46:31.000Z</published>
    <updated>2021-03-24T08:13:26.375Z</updated>
    
    <content type="html"><![CDATA[<p>day after day</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;day after day&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="time" scheme="http://example.com/tags/time/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/03/24/hello-world/"/>
    <id>http://example.com/2021/03/24/hello-world/</id>
    <published>2021-03-24T04:36:12.489Z</published>
    <updated>2021-03-24T04:36:12.489Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/03/22/200_numIslands/"/>
    <id>http://example.com/2021/03/22/200_numIslands/</id>
    <published>2021-03-22T07:15:10.933Z</published>
    <updated>2021-03-22T07:51:26.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="200-numIslands"><a href="#200-numIslands" class="headerlink" title="200  numIslands"></a>200  numIslands</h1><p><strong>考点：深度搜索DFS</strong><br>##DFS：从一个点开始往下走，走到尽可能远，远到不能走下去的时候才返回上一级<br>一般用Recursion迭代，其中最关键的就是终止条件，</p><blockquote><p>给你一个由 ‘1’（陆地）和 ‘0’（水）组成的的二维网格，请你计算网格中岛屿的数量。</p></blockquote><p>岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。</p><p>此外，你可以假设该网格的四条边均被水包围。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">示例 2：</span><br><span class="line"></span><br><span class="line">输入：grid &#x3D; [</span><br><span class="line">  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class="line">  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class="line">  [&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class="line">  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;]</span><br><span class="line">]</span><br><span class="line">输出：3</span><br></pre></td></tr></table></figure><p>###解析：<br><img src="media/16163973109328/%E6%88%AA%E5%B1%8F2021-03-22%20%E4%B8%8B%E5%8D%883.18.34.png" alt="截屏2021-03-22 下午3.18.34"></p><p><strong>point 1</strong><br>每次都是遇到‘1‘之后，开始DFS算法，也就是向四个方向延伸，直到不能继续延伸，就找到了一个岛</p><p><strong>point 2</strong><br>那么如何才能再二维数组中找到‘1’的点呢？  –》 two for loop<br>DFS，一般使用迭代，终止条件：<br>    1、走到不是1的时候停止<br>    2、走到了数组的边界就停止</p><p><strong>point 3</strong><br>  如何避免重复？<br>        1、避免重复遍历已经遍历过的元素，比如1；  –》标记法来避免（遍历过就把1标记为#）<br>        2、避免重复遍历已经遍历过的岛</p><p><img src="media/16163973109328/%E6%88%AA%E5%B1%8F2021-03-22%20%E4%B8%8B%E5%8D%883.29.25.png" alt="截屏2021-03-22 下午3.29.25"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; @lc code&#x3D;start</span><br><span class="line">class Solution &#123;</span><br><span class="line">    public int numIslands(char[][] arr) &#123;</span><br><span class="line">        int res &#x3D; 0;</span><br><span class="line">        &#x2F;&#x2F; row</span><br><span class="line">        for(int i &#x3D; 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">        &#x2F;&#x2F;    col</span><br><span class="line">            for(int j &#x3D; 0; j&lt; arr[0].length; j++) &#123;</span><br><span class="line">                &#x2F;&#x2F; 如果当前元素arr[i][j]&#x3D;&#x3D;“1”，就进行DFS深搜</span><br><span class="line">                if(arr[i][j] &#x3D;&#x3D; &#39;1&#39;) &#123;</span><br><span class="line">                    dfs(arr, i, j);</span><br><span class="line">                    &#x2F;&#x2F;dfs深搜完之后，就说明产生了一个岛，res++，记录岛的num</span><br><span class="line">                    res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 深搜DFS</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void dfs(char[][] arr, int i, int j) &#123;</span><br><span class="line">        &#x2F;&#x2F;corner case  | arr[i][j] !&#x3D;&#39;1&#39; </span><br><span class="line">        if(i &lt; 0 || i &gt;&#x3D; arr.length || j &lt; 0 || j &gt;&#x3D; arr[0].length || arr[i][j] !&#x3D; &#39;1&#39;) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 当前点标记为#</span><br><span class="line">        arr[i][j] &#x3D; &#39;#&#39;;</span><br><span class="line">        &#x2F;&#x2F;上下左右进行DFS</span><br><span class="line">        dfs(arr, i+1, j);</span><br><span class="line">        dfs(arr, i-1, j);</span><br><span class="line">        dfs(arr, i, j+1);</span><br><span class="line">        dfs(arr, i, j-1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; @lc code&#x3D;end</span><br><span class="line"></span><br><span class="line">****</span><br></pre></td></tr></table></figure><p><img src="media/16163973109328/16163993947521.jpg" alt="-w1440"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;200-numIslands&quot;&gt;&lt;a href=&quot;#200-numIslands&quot; class=&quot;headerlink&quot; title=&quot;200  numIslands&quot;&gt;&lt;/a&gt;200  numIslands&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;考点：深度搜索DFS&lt;/</summary>
      
    
    
    
    
  </entry>
  
</feed>
